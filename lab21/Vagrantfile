# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
	:r1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '10.0.0.1', 	adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r12-net"},
                   {ip: '10.10.0.1', 	adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r13-net"},
                ]
  },
	:r2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '10.0.0.2', 	adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r12-net"},
                   {ip: '10.20.0.2', 	adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r32-net"},
                ]
  },
	:r3 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '10.20.0.1', 	adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r32-net"},
                   {ip: '10.10.0.2', 	adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r13-net"},
                ]
  },  
}
Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
        
		box.vm.provider :virtualbox do |box|
          box.customize ["modifyvm", :id, "--cpus", "1"]
          box.customize ["modifyvm", :id, "--memory", "256"]
        end

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
				
          echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
          echo "net.ipv6.conf.all.disable_ipv6=1" >> /etc/sysctl.conf
          echo "net.ipv6.conf.default.disable_ipv6=1" >> /etc/sysctl.conf
          echo "net.ipv4.conf.eth1.rp_filter=0" >> /etc/sysctl.conf
          echo "net.ipv4.conf.eth2.rp_filter=0" >> /etc/sysctl.conf
          echo "net.ipv4.conf.all.rp_filter=0" >> /etc/sysctl.conf
          sysctl -p
		  yum install epel-release -y 
		  yum install quagga -y
        SHELL
        
        case boxname.to_s
        when "r1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
		  echo -e '!\nhostname r1\npassword zebra\nenable password zebra\nlog file /var/log/quagga/quagga.log\n!\ninterface eth0\n ipv6 nd suppress-ra\n!\ninterface eth1\n description r12\n ip address 10.0.0.1/30\n ipv6 nd suppress-ra\n ip forwarding\n!\ninterface eth2\n description r13 ip address 10.10.0.1/30\n ipv6 nd suppress-ra\n ip forwarding\n!\nline vty\n!' > /etc/quagga/zebra.conf
          echo -e '!\nhostname r1\npassword zebra\nlog file /var/log/quagga/ospfd.log\nlog stdout\n!\n!\ninterface eth1\n ip ospf mtu-ignore\n ip ospf network point-to-point\n ip ospf hello-interval 5\n ip ospf dead-interval 10\n ip ospf cost 100\n!\ninterface eth2\n ip ospf mtu-ignore\n ip ospf network point-to-point\n ip ospf hello-interval 5\n ip ospf dead-interval 10\n ip ospf cost 100\n!\nrouter ospf\n ospf router-id 1.1.1.1\n network 10.0.0.0/30 area 0.0.0.0\n network 10.10.0.0/30 area 0.0.0.0\n!\ndefault-information originate always\n!\nline vty\n!' > /etc/quagga/ospfd.conf

            SHELL
		when "r2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
		  echo -e '!\nhostname r2\npassword zebra\nenable password zebra\nlog file /var/log/quagga/quagga.log\n!\ninterface eth0\n ipv6 nd suppress-ra\n!\ninterface eth1\n description r12\n ip address 10.0.0.2/30\n ipv6 nd suppress-ra\n ip forwarding\n!\ninterface eth2\n description r32 ip address 10.20.0.2/30\n ipv6 nd suppress-ra\n ip forwarding\n!\nline vty\n!' > /etc/quagga/zebra.conf
          echo -e '!\nhostname r2\npassword zebra\nlog file /var/log/quagga/ospfd.log\nlog stdout\n!\n!\ninterface eth1\n ip ospf mtu-ignore\n ip ospf network point-to-point\n ip ospf hello-interval 5\n ip ospf dead-interval 10\n ip ospf cost 100\n!\ninterface eth2\n ip ospf mtu-ignore\n ip ospf network point-to-point\n ip ospf hello-interval 5\n ip ospf dead-interval 10\n ip ospf cost 100\n!\nrouter ospf\n ospf router-id 2.2.2.2\n network 10.0.0.0/30 area 0.0.0.0\n network 10.20.0.0/30 area 0.0.0.0\n!\ndefault-information originate always\n!\nline vty\n!' > /etc/quagga/ospfd.conf
			
            SHELL
        when "r3"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
		  echo -e '!\nhostname r3\npassword zebra\nenable password zebra\nlog file /var/log/quagga/quagga.log\n!\ninterface eth0\n ipv6 nd suppress-ra\n!\ninterface eth1\n description r32\n ip address 10.20.0.1/30\n ipv6 nd suppress-ra\n ip forwarding\n!\ninterface eth2\n description r13 ip address 10.10.0.2/30\n ipv6 nd suppress-ra\n ip forwarding\n!\nline vty\n!' > /etc/quagga/zebra.conf
          echo -e '!\nhostname r3\npassword zebra\nlog file /var/log/quagga/ospfd.log\nlog stdout\n!\n!\ninterface eth1\n ip ospf mtu-ignore\n ip ospf network point-to-point\n ip ospf hello-interval 5\n ip ospf dead-interval 10\n ip ospf cost 100\n!\ninterface eth2\n ip ospf mtu-ignore\n ip ospf network point-to-point\n ip ospf hello-interval 5\n ip ospf dead-interval 10\n ip ospf cost 100\n!\nrouter ospf\n ospf router-id 3.3.3.3\n network 10.10.0.0/30 area 0.0.0.0\n network 10.20.0.0/30 area 0.0.0.0\n!\ndefault-information originate always\n!\nline vty\n!' > /etc/quagga/ospfd.conf
			
            SHELL
			
		end
		
		box.vm.provision "shell", inline: <<-SHELL
			systemctl enable zebra ospfd
			systemctl start zebra ospfd
			reboot
		 
		 SHELL
		   
      end

  end
  
  
end